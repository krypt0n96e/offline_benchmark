[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\penta\Documents\esp32\esp32-s3-test-suite\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/penta/Documents/esp32/esp32-s3-test-suite/build/bootloader/bootloader.bin"
Bootloader binary size 0x51c0 bytes. 0x2e40 bytes (36%) free.
[2/7] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cc.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable offline_benchmark.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/penta/Documents/esp32/esp32-s3-test-suite/build/offline_benchmark.bin
[7/7] cmd.exe /C "cd /D C:\Users\penta\Documents\esp32\esp32-s3-test-suite\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/penta/Documents/esp32/esp32-s3-test-suite/build/partition_table/partition-table.bin C:/Users/penta/Documents/esp32/esp32-s3-test-suite/build/offline_benchmark.bin"
offline_benchmark.bin binary size 0x202150 bytes. Smallest app partition is 0x300000 bytes. 0xfdeb0 bytes (33%) free.
